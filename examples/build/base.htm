<html>
<head>
<script src="../../src/bMoor.js"></script>

<script src="../../src/bmoor/build/ModInherit.js"></script>
<script src="../../src/bmoor/build/ModProperties.js"></script>
<script src="../../src/bmoor/build/Compiler.js"></script>
<script src="../../src/bmoor/build/ModFinalize.js"></script>
<script src="../../src/bmoor/build/ModSingleton.js"></script>
<script src="../../src/bmoor/build/ModFactory.js"></script>
<script src="../../src/bmoor/build/ModDecorate.js"></script>
<script src="../../src/bmoor/build/ModRequire.js"></script>
<script src="../../src/bmoor/build/ModMixins.js"></script>

<script src="../../src/bmoor/core/Decorator.js"></script>
</head>
<body>

<script>
	bMoor.make( 'foo.Bar', {
		construct : function FooBar(){

		},
		properties : {
			unos : function( eh ){ console.log('woot|'+this.dos+'|'+(eh||'')+'|'); },
			dos : 2,
			tres : 'three'
		}
	}).then(function(obj){
		console.log( obj );
		var t = new obj();

		console.log( 'foo.Bar', t );
		
		t.unos();
	});

	bMoor.make( 'mock.Bar', {
		construct : function MockBar(){},
		properties : {
			unos : function( eh ){ console.log('woot|mockery'); },
			dos : 2,
			tres : 'three'
		}
	});

	console.log( 'mocked - three : ', (new mock.Bar()).tres );
	
	bMoor.make('foo.Bar2', 
		['foo.Bar',function( Bar ){
			return {
				parent : Bar,
				construct : function FooBar2(){

				},
				singleton : true,
				properties : {
					dos : '--2--'
				}
			};
		}]
	).then(function(obj){ 
		var t = new obj();

		console.log( 'foo.Bar2', t );

		t.unos();

		console.log( obj.$instance.dos );
	});

	bMoor.make('foo.Maker', 
		['foo.Bar',function( Bar ){
			return {
				parent : Bar,
				construct : function Maker(){
				},
				factory : {
					'make' : function(){
						var obj = this;

						return new obj();
					}
				},
				properties : {
					dos : '--Maker--'
				}
			};
		}]
	).then(function(obj){ 
		var t = new obj();

		console.log( 'foo.Maker', t );

		t.unos();

		console.log( obj.$make().dos );
	});

	bMoor.make( 'Decorator1', 
		['bmoor.core.Decorator', function( Decorator ){
			return {
				parent : Decorator,
				properties : {
					unos : function(){
						console.log('wrapped content:');
						this.$wrapped();
					}
				}
			};
		}]
	);

	bMoor.make( 'foo.Bar3',
		['foo.Bar2','bmoor.core.Decorator',function( Bar2, Decorator ){
			return {
				parent : Bar2,
				construct : function FooBar3(){

				},
				decorators : [
					Decorator
				]
			};
		}]
	);

	console.log( 'foo.Bar2', foo.Bar2 );

	foo.Bar2.unos('3');
	foo.Maker.$make();

	var t = new foo.Bar3();
	t.unos('hey now');

	bMoor.define( 'Mixin1', {
		unos : function(){
			console.log( '__---__');
		},
		hello : function(){
			console.log('world');
		}
	});

	console.log(Mixin1);

	bMoor.make( 'foo.Bar4', 
		['foo.Bar3','Mixin1', function( Bar3, Mixin1 ){
			return {
				parent : Bar3,
				mixins : [
					Mixin1
				]
			};
		}]
	);

	t = new foo.Bar4();

	t.unos();
	t.hello();

	bMoor.define( 'foo.hello', [function(){
		return function(){
			return 'hello';
		};
	}]);

	console.log( 'say', foo.hello() );

	bMoor.define( 'foo.helloToo', function(){
		return 'hello too';
	});

	console.log( 'and once again', foo.helloToo() );

	bMoor.mock('foo.Bar2', {
		'foo.Bar' : mock.Bar
	}).then(function( fake ){
		var t = new fake();

		console.log( 'fake:Bar2', t );

		t.unos();
	});
</script>

</body>
</html>